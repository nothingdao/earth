-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.character_images (
  id text NOT NULL,
  character_id text NOT NULL,
  version integer NOT NULL,
  image_url text NOT NULL,
  description text,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT character_images_pkey PRIMARY KEY (id),
  CONSTRAINT character_images_characterId_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.character_inventory (
  id text NOT NULL,
  character_id text NOT NULL,
  item_id text NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  is_equipped boolean NOT NULL DEFAULT false,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone NOT NULL,
  equipped_slot text,
  slot_index integer DEFAULT 1,
  is_primary boolean DEFAULT false,
  CONSTRAINT character_inventory_pkey PRIMARY KEY (id),
  CONSTRAINT character_inventory_characterId_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT character_inventory_itemId_fkey FOREIGN KEY (item_id) REFERENCES public.items(id)
);
CREATE TABLE public.characters (
  id text NOT NULL,
  nft_address text,
  token_id text,
  wallet_address text NOT NULL,
  name text NOT NULL,
  gender USER-DEFINED NOT NULL,
  character_type USER-DEFINED NOT NULL DEFAULT 'HUMAN'::"CharacterType",
  current_location_id text NOT NULL,
  current_version integer NOT NULL DEFAULT 1,
  current_image_url text,
  energy integer NOT NULL DEFAULT 100,
  health integer NOT NULL DEFAULT 100,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone NOT NULL,
  earth integer NOT NULL DEFAULT 0,
  level integer NOT NULL DEFAULT 1,
  status text DEFAULT 'PENDING_MINT'::text,
  payment_signature text UNIQUE,
  experience integer DEFAULT 0,
  base_layer_file text,
  base_gender text CHECK (base_gender = ANY (ARRAY['MALE'::text, 'FEMALE'::text])),
  birth_image_url text,
  CONSTRAINT characters_pkey PRIMARY KEY (id),
  CONSTRAINT characters_currentLocationId_fkey FOREIGN KEY (current_location_id) REFERENCES public.locations(id)
);
CREATE TABLE public.chat_messages (
  id text NOT NULL,
  location_id text NOT NULL,
  character_id text NOT NULL,
  message text NOT NULL,
  message_type USER-DEFINED NOT NULL DEFAULT 'CHAT'::"ChatMessageType",
  is_system boolean NOT NULL DEFAULT false,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id),
  CONSTRAINT chat_messages_characterId_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT chat_messages_locationId_fkey FOREIGN KEY (location_id) REFERENCES public.locations(id)
);
CREATE TABLE public.equipment_slots (
  id text NOT NULL,
  name text NOT NULL,
  layer_type text,
  category text,
  max_slots_base integer DEFAULT 1,
  max_slots_per_level integer DEFAULT 0,
  max_slots_total integer DEFAULT 4,
  unlock_level integer DEFAULT 1,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT equipment_slots_pkey PRIMARY KEY (id)
);
CREATE TABLE public.experience_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  character_id text,
  experience_gained integer NOT NULL,
  experience_total integer NOT NULL,
  source character varying NOT NULL,
  level_before integer,
  level_after integer,
  leveled_up boolean DEFAULT false,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT experience_logs_pkey PRIMARY KEY (id),
  CONSTRAINT experience_logs_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.items (
  id text NOT NULL,
  name text NOT NULL,
  description text NOT NULL,
  category USER-DEFINED NOT NULL,
  layer_type USER-DEFINED,
  image_url text,
  rarity USER-DEFINED NOT NULL DEFAULT 'COMMON'::"Rarity",
  durability integer,
  energy_effect integer,
  health_effect integer,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone NOT NULL,
  layer_file text,
  layer_gender text CHECK (layer_gender = ANY (ARRAY['MALE'::text, 'FEMALE'::text])),
  base_layer_file text,
  has_gender_variants boolean DEFAULT false,
  layer_order integer DEFAULT 0,
  is_visual boolean DEFAULT true,
  compatibility_rules jsonb,
  CONSTRAINT items_pkey PRIMARY KEY (id)
);
CREATE TABLE public.location_resources (
  id text NOT NULL,
  location_id text NOT NULL,
  item_id text NOT NULL,
  spawn_rate double precision NOT NULL DEFAULT 0.1,
  max_per_day integer,
  difficulty integer NOT NULL DEFAULT 1,
  CONSTRAINT location_resources_pkey PRIMARY KEY (id),
  CONSTRAINT location_resources_itemId_fkey FOREIGN KEY (item_id) REFERENCES public.items(id),
  CONSTRAINT location_resources_locationId_fkey FOREIGN KEY (location_id) REFERENCES public.locations(id)
);
CREATE TABLE public.locations (
  id text NOT NULL,
  name text NOT NULL,
  description text NOT NULL,
  image_url text,
  parent_location_id text,
  location_type USER-DEFINED NOT NULL DEFAULT 'REGION'::"LocationType",
  biome text,
  difficulty integer NOT NULL DEFAULT 1,
  map_x integer,
  map_y integer,
  player_count integer NOT NULL DEFAULT 0,
  last_active timestamp without time zone,
  has_market boolean NOT NULL DEFAULT true,
  has_mining boolean NOT NULL DEFAULT true,
  has_travel boolean NOT NULL DEFAULT true,
  has_chat boolean NOT NULL DEFAULT true,
  chat_scope USER-DEFINED NOT NULL DEFAULT 'LOCAL'::"ChatScope",
  welcome_message text,
  lore text,
  min_level integer,
  entry_cost integer,
  is_private boolean NOT NULL DEFAULT false,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone NOT NULL,
  svg_path_id text,
  theme text,
  is_explored boolean DEFAULT true,
  status text DEFAULT 'explored'::text,
  territory text,
  CONSTRAINT locations_pkey PRIMARY KEY (id),
  CONSTRAINT locations_parentLocationId_fkey FOREIGN KEY (parent_location_id) REFERENCES public.locations(id)
);
CREATE TABLE public.market_listings (
  id text NOT NULL,
  seller_id text,
  location_id text NOT NULL,
  item_id text NOT NULL,
  price integer NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  is_system_item boolean NOT NULL DEFAULT false,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp without time zone NOT NULL,
  CONSTRAINT market_listings_pkey PRIMARY KEY (id),
  CONSTRAINT market_listings_locationId_fkey FOREIGN KEY (location_id) REFERENCES public.locations(id),
  CONSTRAINT market_listings_sellerId_fkey FOREIGN KEY (seller_id) REFERENCES public.characters(id),
  CONSTRAINT market_listings_itemId_fkey FOREIGN KEY (item_id) REFERENCES public.items(id)
);
CREATE TABLE public.npc_wallets (
  character_id text NOT NULL,
  encrypted_private_key text NOT NULL,
  public_key text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT npc_wallets_pkey PRIMARY KEY (character_id),
  CONSTRAINT npc_wallets_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.pending_payments (
  id text NOT NULL,
  wallet_address text NOT NULL,
  amount numeric NOT NULL,
  status text NOT NULL DEFAULT 'PENDING'::text CHECK (status = ANY (ARRAY['PENDING'::text, 'VERIFIED'::text, 'EXPIRED'::text, 'FAILED'::text])),
  character_data jsonb,
  memo text,
  treasury_wallet text NOT NULL,
  transaction_signature text,
  amount_received numeric,
  nft_minted boolean DEFAULT false,
  character_id text,
  nft_address text,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone NOT NULL,
  verified_at timestamp with time zone,
  minted_at timestamp with time zone,
  CONSTRAINT pending_payments_pkey PRIMARY KEY (id),
  CONSTRAINT pending_payments_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.reservations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  wallet_address text NOT NULL,
  transaction_signature text NOT NULL UNIQUE,
  amount_sol numeric NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'failed'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT reservations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.transactions (
  id text NOT NULL,
  character_id text NOT NULL,
  type USER-DEFINED NOT NULL,
  item_id text,
  quantity integer,
  description text NOT NULL,
  created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  from_vault text,
  to_vault text,
  from_units numeric,
  to_units numeric,
  exchange_flux numeric,
  wasteland_block bigint,
  txn_earth text UNIQUE,
  sender_earth text,
  receiver_earth text,
  energy_burn integer,
  sequence_id bigint,
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_characterId_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
